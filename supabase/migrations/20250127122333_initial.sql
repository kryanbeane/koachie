create type "public"."client_goal" as enum ('Muscle Gain', 'Fat Loss', 'Body Recomposition', 'Strength Gain', 'Maintenance', 'Endurance', 'Speed', 'Sport', 'Other');

create type "public"."default_tracking_field" as enum ('weight', 'reps', 'rir', 'rest', 'distance', 'pace', '%1rm', '%hr');

create type "public"."experience_level" as enum ('beginner', 'intermediate', 'advanced');

create type "public"."modality" as enum ('hypertrophy', 'strength', 'powerbuilding', 'power', 'cardiovascular', 'flexibility', 'endurance', 'recovery', 'mixed');

create type "public"."muscle_group" as enum ('Biceps', 'Triceps', 'Forearm Flexors', 'Forearm Extensors', 'Side Delts', 'Front Delts', 'Rear Delts', 'Chest', 'Traps & Rhomboids', 'Lats', 'Abs', 'Glutes', 'Hamstrings', 'Quads', 'Adductors', 'Calves');

create type "public"."unit" as enum ('kgs', 'lbs');

create type "public"."variation" as enum ('Standing', 'Seated', 'Lying (Face-Up)', 'Lying (Face-Down)', 'Incline', 'Decline', 'Kneeling', 'Split-Stance', 'Side-Lying', 'Wall-Supported', 'Hanging', 'Plank-Position', 'Bent-Over', 'Chest-Supported', 'Forward-Leaning');

create table "public"."client_invites" (
    "id" uuid not null default gen_random_uuid(),
    "coach_id" uuid not null,
    "code" text not null default ''::text
);


alter table "public"."client_invites" enable row level security;

create table "public"."clients" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp without time zone default now(),
    "first_name" text default ''::text,
    "last_name" text default ''::text,
    "coach_id" uuid default auth.uid(),
    "email" text
);


alter table "public"."clients" enable row level security;

create table "public"."coaches" (
    "id" uuid not null,
    "full_name" text
);


alter table "public"."coaches" enable row level security;

create table "public"."days" (
    "id" uuid not null default gen_random_uuid(),
    "program_id" uuid not null,
    "order" numeric not null default '0'::numeric
);


alter table "public"."days" enable row level security;

create table "public"."exercise_instances" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default (now() AT TIME ZONE 'utc'::text),
    "updated_id" timestamp with time zone not null default (now() AT TIME ZONE 'utc'::text),
    "client_id" uuid,
    "exercise_id" uuid not null,
    "workout_id" uuid not null,
    "performance" jsonb not null default '{}'::jsonb
);


alter table "public"."exercise_instances" enable row level security;

create table "public"."exercises" (
    "id" uuid not null default gen_random_uuid(),
    "coach_id" uuid default auth.uid(),
    "name" text not null default ''::text,
    "created_at" timestamp with time zone not null default (now() AT TIME ZONE 'utc'::text),
    "muscle_groups" muscle_group[] not null,
    "video" text not null default ''::text,
    "updated_at" timestamp with time zone not null default (now() AT TIME ZONE 'utc'::text),
    "note" text not null default ''::text,
    "movement_type" text not null default ''::text,
    "instructions" text[] not null
);


alter table "public"."exercises" enable row level security;

create table "public"."library_workouts" (
    "id" uuid not null default gen_random_uuid(),
    "name" text not null default ''::text,
    "coach_id" uuid not null default gen_random_uuid()
);


alter table "public"."library_workouts" enable row level security;

create table "public"."programs" (
    "id" uuid not null default gen_random_uuid(),
    "name" text not null default ''::text,
    "modality" modality not null default 'hypertrophy'::modality,
    "experience_level" experience_level not null default 'beginner'::experience_level,
    "user_id" uuid not null default auth.uid(),
    "split_length" numeric not null default '0'::numeric
);


alter table "public"."programs" enable row level security;

create table "public"."workout_instances" (
    "id" uuid not null default gen_random_uuid(),
    "day_id" uuid not null
);


alter table "public"."workout_instances" enable row level security;

create table "public"."workouts" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default (now() AT TIME ZONE 'utc'::text),
    "updated_at" timestamp with time zone not null default (now() AT TIME ZONE 'utc'::text),
    "name" text not null default ''::text,
    "coach_id" uuid,
    "description" text not null default ''::text,
    "experience_level" experience_level not null default 'beginner'::experience_level,
    "modality" modality not null default 'hypertrophy'::modality
);


alter table "public"."workouts" enable row level security;

CREATE UNIQUE INDEX client_invites_pkey ON public.client_invites USING btree (id);

CREATE UNIQUE INDEX clients_pkey ON public.clients USING btree (id);

CREATE UNIQUE INDEX days_pkey ON public.days USING btree (id);

CREATE UNIQUE INDEX exercise_instances_pkey ON public.exercise_instances USING btree (id);

CREATE UNIQUE INDEX exercises_pkey ON public.exercises USING btree (id);

CREATE UNIQUE INDEX profiles_pkey ON public.coaches USING btree (id);

CREATE UNIQUE INDEX programs_pkey ON public.programs USING btree (id);

CREATE UNIQUE INDEX workout_instances_pkey ON public.workout_instances USING btree (id);

CREATE UNIQUE INDEX workouts_id_key ON public.library_workouts USING btree (id);

CREATE UNIQUE INDEX workouts_pkey ON public.workouts USING btree (id);

CREATE UNIQUE INDEX workouts_pkey1 ON public.library_workouts USING btree (id);

alter table "public"."client_invites" add constraint "client_invites_pkey" PRIMARY KEY using index "client_invites_pkey";

alter table "public"."clients" add constraint "clients_pkey" PRIMARY KEY using index "clients_pkey";

alter table "public"."coaches" add constraint "profiles_pkey" PRIMARY KEY using index "profiles_pkey";

alter table "public"."days" add constraint "days_pkey" PRIMARY KEY using index "days_pkey";

alter table "public"."exercise_instances" add constraint "exercise_instances_pkey" PRIMARY KEY using index "exercise_instances_pkey";

alter table "public"."exercises" add constraint "exercises_pkey" PRIMARY KEY using index "exercises_pkey";

alter table "public"."library_workouts" add constraint "workouts_pkey1" PRIMARY KEY using index "workouts_pkey1";

alter table "public"."programs" add constraint "programs_pkey" PRIMARY KEY using index "programs_pkey";

alter table "public"."workout_instances" add constraint "workout_instances_pkey" PRIMARY KEY using index "workout_instances_pkey";

alter table "public"."workouts" add constraint "workouts_pkey" PRIMARY KEY using index "workouts_pkey";

alter table "public"."client_invites" add constraint "client_invites_coach_id_fkey" FOREIGN KEY (coach_id) REFERENCES coaches(id) not valid;

alter table "public"."client_invites" validate constraint "client_invites_coach_id_fkey";

alter table "public"."clients" add constraint "clients_coach_id_fkey" FOREIGN KEY (coach_id) REFERENCES coaches(id) not valid;

alter table "public"."clients" validate constraint "clients_coach_id_fkey";

alter table "public"."coaches" add constraint "coaches_id_fkey" FOREIGN KEY (id) REFERENCES auth.users(id) not valid;

alter table "public"."coaches" validate constraint "coaches_id_fkey";

alter table "public"."days" add constraint "days_program_id_fkey" FOREIGN KEY (program_id) REFERENCES programs(id) not valid;

alter table "public"."days" validate constraint "days_program_id_fkey";

alter table "public"."exercise_instances" add constraint "exercise_instances_exercise_id_fkey" FOREIGN KEY (exercise_id) REFERENCES exercises(id) not valid;

alter table "public"."exercise_instances" validate constraint "exercise_instances_exercise_id_fkey";

alter table "public"."exercise_instances" add constraint "exercise_instances_workout_id_fkey" FOREIGN KEY (workout_id) REFERENCES workouts(id) not valid;

alter table "public"."exercise_instances" validate constraint "exercise_instances_workout_id_fkey";

alter table "public"."exercises" add constraint "public_exercises_userId_fkey" FOREIGN KEY (coach_id) REFERENCES coaches(id) not valid;

alter table "public"."exercises" validate constraint "public_exercises_userId_fkey";

alter table "public"."library_workouts" add constraint "library_workouts_coach_id_fkey" FOREIGN KEY (coach_id) REFERENCES coaches(id) not valid;

alter table "public"."library_workouts" validate constraint "library_workouts_coach_id_fkey";

alter table "public"."library_workouts" add constraint "workouts_id_key" UNIQUE using index "workouts_id_key";

alter table "public"."programs" add constraint "public_programs_userId_fkey" FOREIGN KEY (user_id) REFERENCES coaches(id) ON DELETE CASCADE not valid;

alter table "public"."programs" validate constraint "public_programs_userId_fkey";

alter table "public"."workout_instances" add constraint "workout_instances_day_id_fkey" FOREIGN KEY (day_id) REFERENCES days(id) not valid;

alter table "public"."workout_instances" validate constraint "workout_instances_day_id_fkey";

alter table "public"."workouts" add constraint "workouts_coach_id_fkey" FOREIGN KEY (coach_id) REFERENCES coaches(id) not valid;

alter table "public"."workouts" validate constraint "workouts_coach_id_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.handle_new_user()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$begin
  insert into public.coaches (id, full_name)
  values (new.id, new.raw_user_meta_data->>'full_name');
  return new;
end;$function$
;

grant delete on table "public"."client_invites" to "anon";

grant insert on table "public"."client_invites" to "anon";

grant references on table "public"."client_invites" to "anon";

grant select on table "public"."client_invites" to "anon";

grant trigger on table "public"."client_invites" to "anon";

grant truncate on table "public"."client_invites" to "anon";

grant update on table "public"."client_invites" to "anon";

grant delete on table "public"."client_invites" to "authenticated";

grant insert on table "public"."client_invites" to "authenticated";

grant references on table "public"."client_invites" to "authenticated";

grant select on table "public"."client_invites" to "authenticated";

grant trigger on table "public"."client_invites" to "authenticated";

grant truncate on table "public"."client_invites" to "authenticated";

grant update on table "public"."client_invites" to "authenticated";

grant delete on table "public"."client_invites" to "service_role";

grant insert on table "public"."client_invites" to "service_role";

grant references on table "public"."client_invites" to "service_role";

grant select on table "public"."client_invites" to "service_role";

grant trigger on table "public"."client_invites" to "service_role";

grant truncate on table "public"."client_invites" to "service_role";

grant update on table "public"."client_invites" to "service_role";

grant delete on table "public"."clients" to "anon";

grant insert on table "public"."clients" to "anon";

grant references on table "public"."clients" to "anon";

grant select on table "public"."clients" to "anon";

grant trigger on table "public"."clients" to "anon";

grant truncate on table "public"."clients" to "anon";

grant update on table "public"."clients" to "anon";

grant delete on table "public"."clients" to "authenticated";

grant insert on table "public"."clients" to "authenticated";

grant references on table "public"."clients" to "authenticated";

grant select on table "public"."clients" to "authenticated";

grant trigger on table "public"."clients" to "authenticated";

grant truncate on table "public"."clients" to "authenticated";

grant update on table "public"."clients" to "authenticated";

grant delete on table "public"."clients" to "service_role";

grant insert on table "public"."clients" to "service_role";

grant references on table "public"."clients" to "service_role";

grant select on table "public"."clients" to "service_role";

grant trigger on table "public"."clients" to "service_role";

grant truncate on table "public"."clients" to "service_role";

grant update on table "public"."clients" to "service_role";

grant delete on table "public"."coaches" to "anon";

grant insert on table "public"."coaches" to "anon";

grant references on table "public"."coaches" to "anon";

grant select on table "public"."coaches" to "anon";

grant trigger on table "public"."coaches" to "anon";

grant truncate on table "public"."coaches" to "anon";

grant update on table "public"."coaches" to "anon";

grant delete on table "public"."coaches" to "authenticated";

grant insert on table "public"."coaches" to "authenticated";

grant references on table "public"."coaches" to "authenticated";

grant select on table "public"."coaches" to "authenticated";

grant trigger on table "public"."coaches" to "authenticated";

grant truncate on table "public"."coaches" to "authenticated";

grant update on table "public"."coaches" to "authenticated";

grant delete on table "public"."coaches" to "service_role";

grant insert on table "public"."coaches" to "service_role";

grant references on table "public"."coaches" to "service_role";

grant select on table "public"."coaches" to "service_role";

grant trigger on table "public"."coaches" to "service_role";

grant truncate on table "public"."coaches" to "service_role";

grant update on table "public"."coaches" to "service_role";

grant delete on table "public"."days" to "anon";

grant insert on table "public"."days" to "anon";

grant references on table "public"."days" to "anon";

grant select on table "public"."days" to "anon";

grant trigger on table "public"."days" to "anon";

grant truncate on table "public"."days" to "anon";

grant update on table "public"."days" to "anon";

grant delete on table "public"."days" to "authenticated";

grant insert on table "public"."days" to "authenticated";

grant references on table "public"."days" to "authenticated";

grant select on table "public"."days" to "authenticated";

grant trigger on table "public"."days" to "authenticated";

grant truncate on table "public"."days" to "authenticated";

grant update on table "public"."days" to "authenticated";

grant delete on table "public"."days" to "service_role";

grant insert on table "public"."days" to "service_role";

grant references on table "public"."days" to "service_role";

grant select on table "public"."days" to "service_role";

grant trigger on table "public"."days" to "service_role";

grant truncate on table "public"."days" to "service_role";

grant update on table "public"."days" to "service_role";

grant delete on table "public"."exercise_instances" to "anon";

grant insert on table "public"."exercise_instances" to "anon";

grant references on table "public"."exercise_instances" to "anon";

grant select on table "public"."exercise_instances" to "anon";

grant trigger on table "public"."exercise_instances" to "anon";

grant truncate on table "public"."exercise_instances" to "anon";

grant update on table "public"."exercise_instances" to "anon";

grant delete on table "public"."exercise_instances" to "authenticated";

grant insert on table "public"."exercise_instances" to "authenticated";

grant references on table "public"."exercise_instances" to "authenticated";

grant select on table "public"."exercise_instances" to "authenticated";

grant trigger on table "public"."exercise_instances" to "authenticated";

grant truncate on table "public"."exercise_instances" to "authenticated";

grant update on table "public"."exercise_instances" to "authenticated";

grant delete on table "public"."exercise_instances" to "service_role";

grant insert on table "public"."exercise_instances" to "service_role";

grant references on table "public"."exercise_instances" to "service_role";

grant select on table "public"."exercise_instances" to "service_role";

grant trigger on table "public"."exercise_instances" to "service_role";

grant truncate on table "public"."exercise_instances" to "service_role";

grant update on table "public"."exercise_instances" to "service_role";

grant delete on table "public"."exercises" to "anon";

grant insert on table "public"."exercises" to "anon";

grant references on table "public"."exercises" to "anon";

grant select on table "public"."exercises" to "anon";

grant trigger on table "public"."exercises" to "anon";

grant truncate on table "public"."exercises" to "anon";

grant update on table "public"."exercises" to "anon";

grant delete on table "public"."exercises" to "authenticated";

grant insert on table "public"."exercises" to "authenticated";

grant references on table "public"."exercises" to "authenticated";

grant select on table "public"."exercises" to "authenticated";

grant trigger on table "public"."exercises" to "authenticated";

grant truncate on table "public"."exercises" to "authenticated";

grant update on table "public"."exercises" to "authenticated";

grant delete on table "public"."exercises" to "service_role";

grant insert on table "public"."exercises" to "service_role";

grant references on table "public"."exercises" to "service_role";

grant select on table "public"."exercises" to "service_role";

grant trigger on table "public"."exercises" to "service_role";

grant truncate on table "public"."exercises" to "service_role";

grant update on table "public"."exercises" to "service_role";

grant delete on table "public"."library_workouts" to "anon";

grant insert on table "public"."library_workouts" to "anon";

grant references on table "public"."library_workouts" to "anon";

grant select on table "public"."library_workouts" to "anon";

grant trigger on table "public"."library_workouts" to "anon";

grant truncate on table "public"."library_workouts" to "anon";

grant update on table "public"."library_workouts" to "anon";

grant delete on table "public"."library_workouts" to "authenticated";

grant insert on table "public"."library_workouts" to "authenticated";

grant references on table "public"."library_workouts" to "authenticated";

grant select on table "public"."library_workouts" to "authenticated";

grant trigger on table "public"."library_workouts" to "authenticated";

grant truncate on table "public"."library_workouts" to "authenticated";

grant update on table "public"."library_workouts" to "authenticated";

grant delete on table "public"."library_workouts" to "service_role";

grant insert on table "public"."library_workouts" to "service_role";

grant references on table "public"."library_workouts" to "service_role";

grant select on table "public"."library_workouts" to "service_role";

grant trigger on table "public"."library_workouts" to "service_role";

grant truncate on table "public"."library_workouts" to "service_role";

grant update on table "public"."library_workouts" to "service_role";

grant delete on table "public"."programs" to "anon";

grant insert on table "public"."programs" to "anon";

grant references on table "public"."programs" to "anon";

grant select on table "public"."programs" to "anon";

grant trigger on table "public"."programs" to "anon";

grant truncate on table "public"."programs" to "anon";

grant update on table "public"."programs" to "anon";

grant delete on table "public"."programs" to "authenticated";

grant insert on table "public"."programs" to "authenticated";

grant references on table "public"."programs" to "authenticated";

grant select on table "public"."programs" to "authenticated";

grant trigger on table "public"."programs" to "authenticated";

grant truncate on table "public"."programs" to "authenticated";

grant update on table "public"."programs" to "authenticated";

grant delete on table "public"."programs" to "service_role";

grant insert on table "public"."programs" to "service_role";

grant references on table "public"."programs" to "service_role";

grant select on table "public"."programs" to "service_role";

grant trigger on table "public"."programs" to "service_role";

grant truncate on table "public"."programs" to "service_role";

grant update on table "public"."programs" to "service_role";

grant delete on table "public"."workout_instances" to "anon";

grant insert on table "public"."workout_instances" to "anon";

grant references on table "public"."workout_instances" to "anon";

grant select on table "public"."workout_instances" to "anon";

grant trigger on table "public"."workout_instances" to "anon";

grant truncate on table "public"."workout_instances" to "anon";

grant update on table "public"."workout_instances" to "anon";

grant delete on table "public"."workout_instances" to "authenticated";

grant insert on table "public"."workout_instances" to "authenticated";

grant references on table "public"."workout_instances" to "authenticated";

grant select on table "public"."workout_instances" to "authenticated";

grant trigger on table "public"."workout_instances" to "authenticated";

grant truncate on table "public"."workout_instances" to "authenticated";

grant update on table "public"."workout_instances" to "authenticated";

grant delete on table "public"."workout_instances" to "service_role";

grant insert on table "public"."workout_instances" to "service_role";

grant references on table "public"."workout_instances" to "service_role";

grant select on table "public"."workout_instances" to "service_role";

grant trigger on table "public"."workout_instances" to "service_role";

grant truncate on table "public"."workout_instances" to "service_role";

grant update on table "public"."workout_instances" to "service_role";

grant delete on table "public"."workouts" to "anon";

grant insert on table "public"."workouts" to "anon";

grant references on table "public"."workouts" to "anon";

grant select on table "public"."workouts" to "anon";

grant trigger on table "public"."workouts" to "anon";

grant truncate on table "public"."workouts" to "anon";

grant update on table "public"."workouts" to "anon";

grant delete on table "public"."workouts" to "authenticated";

grant insert on table "public"."workouts" to "authenticated";

grant references on table "public"."workouts" to "authenticated";

grant select on table "public"."workouts" to "authenticated";

grant trigger on table "public"."workouts" to "authenticated";

grant truncate on table "public"."workouts" to "authenticated";

grant update on table "public"."workouts" to "authenticated";

grant delete on table "public"."workouts" to "service_role";

grant insert on table "public"."workouts" to "service_role";

grant references on table "public"."workouts" to "service_role";

grant select on table "public"."workouts" to "service_role";

grant trigger on table "public"."workouts" to "service_role";

grant truncate on table "public"."workouts" to "service_role";

grant update on table "public"."workouts" to "service_role";

create policy "Coach profiles are viewable by self."
on "public"."coaches"
as permissive
for select
to public
using ((auth.uid() = id));


create policy "Coaches can insert their own profile."
on "public"."coaches"
as permissive
for insert
to public
with check ((auth.uid() = id));


create policy "Coaches can update own profile."
on "public"."coaches"
as permissive
for update
to public
using ((auth.uid() = id));


create policy "Enable ALL for Coaches based on coach_id"
on "public"."exercises"
as permissive
for all
to public
using ((( SELECT auth.uid() AS uid) = coach_id));


create policy "Enable ALL for authenticated users only"
on "public"."exercises"
as permissive
for all
to public
using (true);


create policy "Enable select for authenticated users only"
on "public"."exercises"
as permissive
for select
to authenticated
using ((coach_id IS NULL));


create policy "Coaches can delete their own programs."
on "public"."programs"
as permissive
for delete
to authenticated
using ((( SELECT auth.uid() AS uid) = user_id));


create policy "Coaches can insert their own programs."
on "public"."programs"
as permissive
for insert
to authenticated
with check ((( SELECT auth.uid() AS uid) = user_id));


create policy "Coaches can update their own programs."
on "public"."programs"
as permissive
for update
to authenticated
using ((( SELECT auth.uid() AS uid) = user_id))
with check ((( SELECT auth.uid() AS uid) = user_id));


create policy "Coaches can view their own programs."
on "public"."programs"
as permissive
for select
to public
using ((( SELECT auth.uid() AS uid) = user_id));


create policy "Enable ALL for authenticated users only"
on "public"."workouts"
as permissive
for all
to authenticated
using (true);



