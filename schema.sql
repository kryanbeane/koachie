

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


CREATE EXTENSION IF NOT EXISTS "pg_cron" WITH SCHEMA "pg_catalog";






CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";






COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";






CREATE TYPE "public"."client_goal" AS ENUM (
    'Muscle Gain',
    'Fat Loss',
    'Body Recomposition',
    'Strength Gain',
    'Maintenance',
    'Endurance',
    'Speed',
    'Sport',
    'Other'
);


ALTER TYPE "public"."client_goal" OWNER TO "postgres";


CREATE TYPE "public"."default_tracking_field" AS ENUM (
    'weight',
    'reps',
    'rir',
    'rest',
    'distance',
    'pace',
    '%1rm',
    '%hr'
);


ALTER TYPE "public"."default_tracking_field" OWNER TO "postgres";


CREATE TYPE "public"."experience_level" AS ENUM (
    'beginner',
    'intermediate',
    'advanced'
);


ALTER TYPE "public"."experience_level" OWNER TO "postgres";


CREATE TYPE "public"."modality" AS ENUM (
    'hypertrophy',
    'strength',
    'powerbuilding',
    'power',
    'cardiovascular',
    'flexibility',
    'endurance',
    'recovery',
    'mixed'
);


ALTER TYPE "public"."modality" OWNER TO "postgres";


CREATE TYPE "public"."muscle_group" AS ENUM (
    'Biceps',
    'Triceps',
    'Forearm Flexors',
    'Forearm Extensors',
    'Side Delts',
    'Front Delts',
    'Rear Delts',
    'Chest',
    'Traps & Rhomboids',
    'Lats',
    'Abs',
    'Glutes',
    'Hamstrings',
    'Quads',
    'Adductors',
    'Calves'
);


ALTER TYPE "public"."muscle_group" OWNER TO "postgres";


CREATE TYPE "public"."unit" AS ENUM (
    'kgs',
    'lbs'
);


ALTER TYPE "public"."unit" OWNER TO "postgres";


CREATE TYPE "public"."variation" AS ENUM (
    'Standing',
    'Seated',
    'Lying (Face-Up)',
    'Lying (Face-Down)',
    'Incline',
    'Decline',
    'Kneeling',
    'Split-Stance',
    'Side-Lying',
    'Wall-Supported',
    'Hanging',
    'Plank-Position',
    'Bent-Over',
    'Chest-Supported',
    'Forward-Leaning'
);


ALTER TYPE "public"."variation" OWNER TO "postgres";


CREATE OR REPLACE FUNCTION "public"."handle_new_user"() RETURNS "trigger"
    LANGUAGE "plpgsql" SECURITY DEFINER
    AS $$begin
  insert into public.coaches (id, full_name)
  values (new.id, new.raw_user_meta_data->>'full_name');
  return new;
end;$$;


ALTER FUNCTION "public"."handle_new_user"() OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."client_invites" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "coach_id" "uuid" NOT NULL,
    "code" "text" DEFAULT ''::"text" NOT NULL
);


ALTER TABLE "public"."client_invites" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."clients" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp without time zone DEFAULT "now"(),
    "first_name" "text" DEFAULT ''::"text",
    "last_name" "text" DEFAULT ''::"text",
    "coach_id" "uuid" DEFAULT "auth"."uid"(),
    "email" "text"
);


ALTER TABLE "public"."clients" OWNER TO "postgres";


COMMENT ON TABLE "public"."clients" IS 'clients';



ALTER TABLE "public"."clients" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."clients_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."coaches" (
    "id" "uuid" NOT NULL,
    "full_name" "text"
);


ALTER TABLE "public"."coaches" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."days" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "program_id" "uuid" NOT NULL,
    "order" numeric DEFAULT '0'::numeric NOT NULL
);


ALTER TABLE "public"."days" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."exercise_instances" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "created_at" timestamp with time zone DEFAULT ("now"() AT TIME ZONE 'utc'::"text") NOT NULL,
    "updated_id" timestamp with time zone DEFAULT ("now"() AT TIME ZONE 'utc'::"text") NOT NULL,
    "client_id" "uuid",
    "exercise_id" "uuid" NOT NULL,
    "workout_id" "uuid" NOT NULL,
    "performance" "jsonb" DEFAULT '{}'::"jsonb" NOT NULL
);


ALTER TABLE "public"."exercise_instances" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."exercises" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "coach_id" "uuid" DEFAULT "auth"."uid"(),
    "name" "text" DEFAULT ''::"text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT ("now"() AT TIME ZONE 'utc'::"text") NOT NULL,
    "muscle_groups" "public"."muscle_group"[] NOT NULL,
    "video" "text" DEFAULT ''::"text" NOT NULL,
    "updated_at" timestamp with time zone DEFAULT ("now"() AT TIME ZONE 'utc'::"text") NOT NULL,
    "note" "text" DEFAULT ''::"text" NOT NULL,
    "movement_type" "text" DEFAULT ''::"text" NOT NULL,
    "instructions" "text"[] NOT NULL
);


ALTER TABLE "public"."exercises" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."library_workouts" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "name" "text" DEFAULT ''::"text" NOT NULL,
    "coach_id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL
);


ALTER TABLE "public"."library_workouts" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."programs" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "name" "text" DEFAULT ''::"text" NOT NULL,
    "modality" "public"."modality" DEFAULT 'hypertrophy'::"public"."modality" NOT NULL,
    "experience_level" "public"."experience_level" DEFAULT 'beginner'::"public"."experience_level" NOT NULL,
    "user_id" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "split_length" numeric DEFAULT '0'::numeric NOT NULL
);


ALTER TABLE "public"."programs" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."workout_instances" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "day_id" "uuid" NOT NULL
);


ALTER TABLE "public"."workout_instances" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."workouts" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "created_at" timestamp with time zone DEFAULT ("now"() AT TIME ZONE 'utc'::"text") NOT NULL,
    "updated_at" timestamp with time zone DEFAULT ("now"() AT TIME ZONE 'utc'::"text") NOT NULL,
    "name" "text" DEFAULT ''::"text" NOT NULL,
    "coach_id" "uuid",
    "description" "text" DEFAULT ''::"text" NOT NULL,
    "experience_level" "public"."experience_level" DEFAULT 'beginner'::"public"."experience_level" NOT NULL,
    "modality" "public"."modality" DEFAULT 'hypertrophy'::"public"."modality" NOT NULL
);


ALTER TABLE "public"."workouts" OWNER TO "postgres";


ALTER TABLE ONLY "public"."client_invites"
    ADD CONSTRAINT "client_invites_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."clients"
    ADD CONSTRAINT "clients_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."days"
    ADD CONSTRAINT "days_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."exercise_instances"
    ADD CONSTRAINT "exercise_instances_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."exercises"
    ADD CONSTRAINT "exercises_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."coaches"
    ADD CONSTRAINT "profiles_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."programs"
    ADD CONSTRAINT "programs_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."workout_instances"
    ADD CONSTRAINT "workout_instances_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."library_workouts"
    ADD CONSTRAINT "workouts_id_key" UNIQUE ("id");



ALTER TABLE ONLY "public"."workouts"
    ADD CONSTRAINT "workouts_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."library_workouts"
    ADD CONSTRAINT "workouts_pkey1" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."client_invites"
    ADD CONSTRAINT "client_invites_coach_id_fkey" FOREIGN KEY ("coach_id") REFERENCES "public"."coaches"("id");



ALTER TABLE ONLY "public"."clients"
    ADD CONSTRAINT "clients_coach_id_fkey" FOREIGN KEY ("coach_id") REFERENCES "public"."coaches"("id");



ALTER TABLE ONLY "public"."coaches"
    ADD CONSTRAINT "coaches_id_fkey" FOREIGN KEY ("id") REFERENCES "auth"."users"("id");



ALTER TABLE ONLY "public"."days"
    ADD CONSTRAINT "days_program_id_fkey" FOREIGN KEY ("program_id") REFERENCES "public"."programs"("id");



ALTER TABLE ONLY "public"."exercise_instances"
    ADD CONSTRAINT "exercise_instances_exercise_id_fkey" FOREIGN KEY ("exercise_id") REFERENCES "public"."exercises"("id");



ALTER TABLE ONLY "public"."exercise_instances"
    ADD CONSTRAINT "exercise_instances_workout_id_fkey" FOREIGN KEY ("workout_id") REFERENCES "public"."workouts"("id");



ALTER TABLE ONLY "public"."library_workouts"
    ADD CONSTRAINT "library_workouts_coach_id_fkey" FOREIGN KEY ("coach_id") REFERENCES "public"."coaches"("id");



ALTER TABLE ONLY "public"."exercises"
    ADD CONSTRAINT "public_exercises_userId_fkey" FOREIGN KEY ("coach_id") REFERENCES "public"."coaches"("id");



ALTER TABLE ONLY "public"."programs"
    ADD CONSTRAINT "public_programs_userId_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."coaches"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."workout_instances"
    ADD CONSTRAINT "workout_instances_day_id_fkey" FOREIGN KEY ("day_id") REFERENCES "public"."days"("id");



ALTER TABLE ONLY "public"."workouts"
    ADD CONSTRAINT "workouts_coach_id_fkey" FOREIGN KEY ("coach_id") REFERENCES "public"."coaches"("id");



CREATE POLICY "Coach profiles are viewable by self." ON "public"."coaches" FOR SELECT USING (("auth"."uid"() = "id"));



CREATE POLICY "Coaches can delete their own programs." ON "public"."programs" FOR DELETE TO "authenticated" USING ((( SELECT "auth"."uid"() AS "uid") = "user_id"));



CREATE POLICY "Coaches can insert their own profile." ON "public"."coaches" FOR INSERT WITH CHECK (("auth"."uid"() = "id"));



CREATE POLICY "Coaches can insert their own programs." ON "public"."programs" FOR INSERT TO "authenticated" WITH CHECK ((( SELECT "auth"."uid"() AS "uid") = "user_id"));



CREATE POLICY "Coaches can update own profile." ON "public"."coaches" FOR UPDATE USING (("auth"."uid"() = "id"));



CREATE POLICY "Coaches can update their own programs." ON "public"."programs" FOR UPDATE TO "authenticated" USING ((( SELECT "auth"."uid"() AS "uid") = "user_id")) WITH CHECK ((( SELECT "auth"."uid"() AS "uid") = "user_id"));



CREATE POLICY "Coaches can view their own programs." ON "public"."programs" FOR SELECT USING ((( SELECT "auth"."uid"() AS "uid") = "user_id"));



CREATE POLICY "Enable ALL for Coaches based on coach_id" ON "public"."exercises" USING ((( SELECT "auth"."uid"() AS "uid") = "coach_id"));



CREATE POLICY "Enable ALL for authenticated users only" ON "public"."exercises" USING (true);



CREATE POLICY "Enable ALL for authenticated users only" ON "public"."workouts" TO "authenticated" USING (true);



CREATE POLICY "Enable select for authenticated users only" ON "public"."exercises" FOR SELECT TO "authenticated" USING (("coach_id" IS NULL));



ALTER TABLE "public"."client_invites" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."clients" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."coaches" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."days" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."exercise_instances" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."exercises" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."library_workouts" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."programs" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."workout_instances" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."workouts" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."days";



ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."library_workouts";



ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."programs";



ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."workout_instances";









GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";















































































































































































































GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "anon";
GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "service_role";
























GRANT ALL ON TABLE "public"."client_invites" TO "anon";
GRANT ALL ON TABLE "public"."client_invites" TO "authenticated";
GRANT ALL ON TABLE "public"."client_invites" TO "service_role";



GRANT ALL ON TABLE "public"."clients" TO "anon";
GRANT ALL ON TABLE "public"."clients" TO "authenticated";
GRANT ALL ON TABLE "public"."clients" TO "service_role";



GRANT ALL ON SEQUENCE "public"."clients_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."clients_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."clients_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."coaches" TO "anon";
GRANT ALL ON TABLE "public"."coaches" TO "authenticated";
GRANT ALL ON TABLE "public"."coaches" TO "service_role";



GRANT ALL ON TABLE "public"."days" TO "anon";
GRANT ALL ON TABLE "public"."days" TO "authenticated";
GRANT ALL ON TABLE "public"."days" TO "service_role";



GRANT ALL ON TABLE "public"."exercise_instances" TO "anon";
GRANT ALL ON TABLE "public"."exercise_instances" TO "authenticated";
GRANT ALL ON TABLE "public"."exercise_instances" TO "service_role";



GRANT ALL ON TABLE "public"."exercises" TO "anon";
GRANT ALL ON TABLE "public"."exercises" TO "authenticated";
GRANT ALL ON TABLE "public"."exercises" TO "service_role";



GRANT ALL ON TABLE "public"."library_workouts" TO "anon";
GRANT ALL ON TABLE "public"."library_workouts" TO "authenticated";
GRANT ALL ON TABLE "public"."library_workouts" TO "service_role";



GRANT ALL ON TABLE "public"."programs" TO "anon";
GRANT ALL ON TABLE "public"."programs" TO "authenticated";
GRANT ALL ON TABLE "public"."programs" TO "service_role";



GRANT ALL ON TABLE "public"."workout_instances" TO "anon";
GRANT ALL ON TABLE "public"."workout_instances" TO "authenticated";
GRANT ALL ON TABLE "public"."workout_instances" TO "service_role";



GRANT ALL ON TABLE "public"."workouts" TO "anon";
GRANT ALL ON TABLE "public"."workouts" TO "authenticated";
GRANT ALL ON TABLE "public"."workouts" TO "service_role";



ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
